@import url("https://use.typekit.net/rcn0owy.css");

/*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

:root {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

/**
Add the correct font weight in Edge and Safari.
*/

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/


input {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

/**
Correct the inability to style clickable types in iOS and Safari.
*/

/**
Remove the inner border and padding in Firefox.
*/

/**
Restore the focus styles unset by the previous rule.
*/

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */


pre {
  margin: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

input::-moz-placeholder {
  color: #a1a1aa;
}

input:-ms-input-placeholder {
  color: #a1a1aa;
}

input::placeholder {
  color: #a1a1aa;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */


input {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code {
  font-family: ubuntu-mono, monospace;
}

/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */


svg {
  display: block;
  vertical-align: middle;
}

/**
 * Constrain images and videos to the parent width and preserve
 * their instrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

.container{
  width: 100%;
}

@media (min-width: 640px){
  .container{
    max-width: 640px;
  }
}

@media (min-width: 768px){
  .container{
    max-width: 768px;
  }
}

@media (min-width: 1024px){
  .container{
    max-width: 1024px;
  }
}

@media (min-width: 1280px){
  .container{
    max-width: 1280px;
  }
}

.bg-black{
  --tw-bg-opacity: 1;
  background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}

.bg-white{
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.bg-surface{
  --tw-bg-opacity: 1;
  background-color: rgba(221, 221, 238, var(--tw-bg-opacity));
}

.bg-opacity-25{
  --tw-bg-opacity: 0.25;
}

.bg-opacity-50{
  --tw-bg-opacity: 0.5;
}

.bg-repeat-round{
  background-repeat: round;
}

.inline{
  display: inline;
}

.flex{
  display: flex;
}

.inline-flex{
  display: inline-flex;
}

.grid{
  display: grid;
}

.flex-row{
  flex-direction: row;
}

.flex-col{
  flex-direction: column;
}

.items-start{
  align-items: flex-start;
}

.items-center{
  align-items: center;
}

.items-stretch{
  align-items: stretch;
}

.justify-start{
  justify-content: flex-start;
}

.justify-end{
  justify-content: flex-end;
}

.justify-between{
  justify-content: space-between;
}

.justify-evenly{
  justify-content: space-evenly;
}

.font-secondary{
  font-family: open-sans, sans-serif;
}

.h-px{
  height: 1px;
}

.text-sm{
  font-size: 0.875rem;
}

.text-base{
  font-size: 1rem;
}

.text-xl{
  font-size: 1.25rem;
}

.text-2xl{
  font-size: 1.5rem;
}

.text-3xl{
  font-size: 1.875rem;
}

.m-auto{
  margin: auto;
}

.my-auto{
  margin-top: auto;
  margin-bottom: auto;
}

.mr-2{
  margin-right: 0.5rem;
}

.opacity-0{
  opacity: 0;
}

.opacity-25{
  opacity: 0.25;
}

.overflow-hidden{
  overflow: hidden;
}

.py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-4{
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-6{
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.px-6{
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.pt-2{
  padding-top: 0.5rem;
}

.pb-2{
  padding-bottom: 0.5rem;
}

.pr-4{
  padding-right: 1rem;
}

.pl-4{
  padding-left: 1rem;
}

.pr-6{
  padding-right: 1.5rem;
}

.pl-6{
  padding-left: 1.5rem;
}

.pt-1\/2{
  padding-top: 50%;
}

.pointer-events-none{
  pointer-events: none;
}

.fixed{
  position: fixed;
}

.absolute{
  position: absolute;
}

.relative{
  position: relative;
}

.inset-0{
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.top-0{
  top: 0;
}

.left-0{
  left: 0;
}

*{
  --tw-shadow: 0 0 #0000;
}

*{
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
}

.stroke-1{
  stroke-width: 1;
}

.text-white{
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.text-success{
  --tw-text-opacity: 1;
  color: rgba(34, 153, 34, var(--tw-text-opacity));
}

.text-failure{
  --tw-text-opacity: 1;
  color: rgba(153, 34, 34, var(--tw-text-opacity));
}

.text-opacity-75{
  --tw-text-opacity: 0.75;
}

.w-4{
  width: 1rem;
}

.w-2\/5{
  width: 40%;
}

.transform{
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-full{
  --tw-translate-x: 100%;
}

.-translate-x-full{
  --tw-translate-x: -100%;
}

.translate-y-full{
  --tw-translate-y: 100%;
}

.-translate-y-full{
  --tw-translate-y: -100%;
}

.transition-none{
  transition-property: none;
}

.transition-all{
  transition-property: all;
}

.transition-size{
  transition-property: width, height;
}

.duration-200{
  transition-duration: 200ms;
}

.duration-300{
  transition-duration: 300ms;
}

@-webkit-keyframes spin{
  to{
    transform: rotate(360deg);
  }
}

@keyframes spin{
  to{
    transform: rotate(360deg);
  }
}

@-webkit-keyframes ping{
  75%, 100%{
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes ping{
  75%, 100%{
    transform: scale(2);
    opacity: 0;
  }
}

@-webkit-keyframes pulse{
  50%{
    opacity: .5;
  }
}

@keyframes pulse{
  50%{
    opacity: .5;
  }
}

@-webkit-keyframes bounce{
  0%, 100%{
    transform: translateY(-25%);
    -webkit-animation-timing-function: cubic-bezier(0.8,0,1,1);
            animation-timing-function: cubic-bezier(0.8,0,1,1);
  }

  50%{
    transform: none;
    -webkit-animation-timing-function: cubic-bezier(0,0,0.2,1);
            animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}

@keyframes bounce{
  0%, 100%{
    transform: translateY(-25%);
    -webkit-animation-timing-function: cubic-bezier(0.8,0,1,1);
            animation-timing-function: cubic-bezier(0.8,0,1,1);
  }

  50%{
    transform: none;
    -webkit-animation-timing-function: cubic-bezier(0,0,0.2,1);
            animation-timing-function: cubic-bezier(0,0,0.2,1);
  }
}

.animate-ping{
  -webkit-animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
          animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}

* {
  outline: 2px solid transparent;
  outline-offset: 2px;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.neu-convex {
  background-image: linear-gradient(
    calc((90 + var(--neumorphic-light-azimuth)) * 1deg),
    var(--neumorphic-light) 0%,
    var(--neumorphic-shadow) 100%
  );
  background-blend-mode: overlay;
}

.glass-landed {
  --neumorphic-offset: 4px;
  --α: calc(var(--neumorphic-light-azimuth) * 0.01745329251);
  --sin: calc(
    (
      1 - ((var(--α) * var(--α)) / 2) +
        ((var(--α) * var(--α) * var(--α) * var(--α)) / 24) -
        (
          (var(--α) * var(--α) * var(--α) * var(--α) * var(--α) * var(--α)) /
            720
        )
    )
  );
  --cos: calc(
    (
      var(--α) - (var(--α) * var(--α) * var(--α) / 6) +
        (var(--α) * var(--α) * var(--α) * var(--α) * var(--α) / 120) -
        (
          var(--α) * var(--α) * var(--α) * var(--α) * var(--α) * var(--α) *
            var(--α) / 5040
        )
    )
  );
  --shadow-h-offset: calc(var(--sin) * var(--neumorphic-offset));
  --shadow-v-offset: calc(var(--cos) * var(--neumorphic-offset));
  --light-h-offset: calc(0px - var(--shadow-h-offset));
  --light-v-offset: calc(0px - var(--shadow-v-offset));
  position: relative;
  transition: all 0.2s;
  z-index: 0;
}

.glass-landed::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(
      ellipse 100% 100%,
      rgba(255, 255, 255, 0.4) 0,
      transparent 50%
    ),
    radial-gradient(
      ellipse 100% 100%,
      rgba(255, 255, 255, 0.2) 0,
      transparent 50%
    ),
    radial-gradient(ellipse at 0 0, rgba(255, 255, 255, 1) 0, transparent 50%),
    radial-gradient(ellipse at 0 0, rgba(255, 255, 255, 1) 0, transparent 50%),
    linear-gradient(0deg, rgba(255, 255, 255, 0.05) 0, rgba(0, 0, 0, 0.07) 100%),
    linear-gradient(0deg, rgba(255, 255, 255, 0.05) 0, rgba(0, 0, 0, 0.03) 100%),
    linear-gradient(
      90deg,
      rgba(0, 0, 0, 0.03) 0,
      rgba(255, 255, 255, 0.05) 100%
    ),
    linear-gradient(
      90deg,
      rgba(0, 0, 0, 0.07) 0,
      rgba(255, 255, 255, 0.05) 100%
    ),
    linear-gradient(
      calc((90 + var(--neumorphic-light-azimuth)) * 1deg),
      rgba(0, 0, 0, 0.05) 0,
      rgba(255, 255, 255, 0.1) 100%
    );
  background-position: calc(80% - var(--glass-bevel))
      calc(100% - var(--glass-bevel)),
    calc(100% - var(--glass-bevel)) calc(80% - var(--glass-bevel)),
    var(--glass-bevel) var(--glass-bevel), var(--glass-bevel) var(--glass-bevel),
    100% var(--glass-bevel), 0 var(--glass-bevel), var(--glass-bevel) 0,
    var(--glass-bevel) 100%, var(--glass-bevel) var(--glass-bevel);
  background-size: 60% 1px, 1px 60%, 100% 1px, 1px 100%,
    var(--glass-bevel) calc(100% - (var(--glass-bevel) * 2)),
    var(--glass-bevel) calc(100% - (var(--glass-bevel) * 2)),
    calc(100% - (var(--glass-bevel) * 2)) var(--glass-bevel),
    calc(100% - (var(--glass-bevel) * 2)) var(--glass-bevel),
    calc(100% - (var(--glass-bevel) * 2)) calc(100% - (var(--glass-bevel) * 2));
  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat, no-repeat,
    no-repeat, no-repeat, no-repeat, no-repeat;
  background-blend-mode: screen, screen, screen, screen, overlay, overlay,
    overlay, overlay, screen;
}

.glass-landed::before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-backdrop-filter: blur(2px);
          backdrop-filter: blur(2px);
  background-color: rgba(30, 30, 50, 0.7);
  background-image: linear-gradient(
      calc((90 + var(--neumorphic-light-azimuth)) * 1deg),
      rgba(255, 255, 255, 0.9) 0,
      rgba(255, 255, 255, 0.5) 30%,
      transparent 100%
    ),
    linear-gradient(
      calc((45 + var(--neumorphic-light-azimuth)) * 1deg),
      transparent 0%,
      rgba(0, 0, 0, 0.2) 100%
    ),
    linear-gradient(
      calc((135 + var(--neumorphic-light-azimuth)) * 1deg),
      transparent 0%,
      rgba(0, 0, 0, 0.2) 100%
    );
  border-radius: var(--glass-bevel);
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.03), 2px 2px 2px rgba(0, 0, 0, 0.07),
    3px 3px 3px rgba(0, 0, 0, 0.1), 6px 4px 6px rgba(0, 0, 0, 0.12),
    4px 6px 6px rgba(0, 0, 0, 0.15);
}

/* UI Shorthands next */

/* interactable */

.ui\/interactable {
  --tw-bg-opacity: 1;
  background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
  --tw-bg-opacity: 0.25;
  cursor: pointer;
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
  transition-property: all;
  transition-duration: 200ms;
}

.ui\/interactable:focus, .ui\/interactable:hover{
  --tw-bg-opacity: 1;
  background-color: rgba(221, 221, 238, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
  --tw-text-opacity: 0.75;
  transition-property: none;
}

/* selected */

.bg-blueprint {
  --primary-line-color: rgba(0, 0, 0, 0.05);
  --primary-line-width: 1px;
  --primary-square-size: 100px;
  --secondary-line-color: rgba(0, 0, 0, 0.02);
  --secondary-line-width: 1px;
  --secondary-square-size: 20px;
  background-image: linear-gradient(
      var(--primary-line-color) var(--primary-line-width),
      transparent var(--primary-line-width)
    ),
    linear-gradient(
      90deg,
      var(--primary-line-color) var(--primary-line-width),
      transparent var(--primary-line-width)
    ),
    linear-gradient(
      var(--secondary-line-color) var(--secondary-line-width),
      transparent var(--secondary-line-width)
    ),
    linear-gradient(
      90deg,
      var(--secondary-line-color) var(--secondary-line-width),
      transparent var(--secondary-line-width)
    );
  background-size: var(--primary-square-size) var(--primary-square-size),
    var(--primary-square-size) var(--primary-square-size),
    var(--secondary-square-size) var(--secondary-square-size),
    var(--secondary-square-size) var(--secondary-square-size);
  background-position: calc(50% - var(--primary-square-size) / 2)
    calc(50% - var(--primary-square-size) / 2);
}

.touch-action-none {
  touch-action: none;
}
